{"version":3,"file":"static/js/885.33557769.chunk.js","mappings":"qVAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBC,MAEnB,iDACAN,GAJG,cACCO,EADD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACgBH,MAAM,sCAAD,OACcG,EADd,mBAExBT,GAHG,cACCO,EADD,gBAKeA,EAAOG,OALtB,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,yFACgBH,MAAM,sCAAD,OACcG,EADd,2BAExBT,GAHG,cACCO,EADD,gBAKcA,EAAOG,OALrB,cAKCG,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,yFACgBH,MAAM,sCAAD,OACcG,EADd,kCAExBT,GAHG,cACCO,EADD,gBAKiBA,EAAOG,OALxB,cAKCK,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACgBX,MAAM,mDAAD,OAC2BW,EAD3B,8CAExBjB,GAHG,cACCO,EADD,gBAKeA,EAAOG,OALtB,cAKCC,EALD,yBAMEA,GANF,kE,gFC9CP,EAAuB,uBAAvB,EAAsD,wBAAtD,EAAqF,uB,SCCxEO,EAAW,SAAC,GAAY,IAAVC,EAAS,EAATA,GAIzB,OACE,gBAAIC,UAAWC,EAAf,WACE,wBAAKF,EAAGG,QACR,gBACEC,IACEJ,EAAGK,aAAH,0CACuCL,EAAGK,cARhD,uFAWIC,IAAI,QACJC,MAAM,MACNN,UAAWC,KAEb,eAAGD,UAAWC,EAAd,wBAAoCF,EAAGQ,eAG5C,E,SCrBD,EAAuB,mBCGff,EAAYgB,EAAQ,KAApBhB,QACR,EAAgCgB,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAwCnB,EAtCa,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,EAAwBD,EAAS,MAAjC,eAAOjB,EAAP,KAAaoB,EAAb,KASA,OAPAJ,GAAU,WACRjB,EAAQmB,GAAIG,MAAK,SAAAC,GACfF,EAAQE,EAET,GAEF,GAAE,CAACJ,KAEF,0BACE,eAAIX,UAAWC,EAAf,SACGR,GACCA,EAAKA,KAAKuB,KAAI,SAAAjB,GACZ,OACE,SAACD,EAAD,CAAsBC,GAAIA,GAAXA,EAAGY,GAerB,OAIV,C","sources":["components/api.jsx","webpack://goit-react-hw-05-movies/./src/components/castItem/castItem.module.css?c7ff","components/castItem/castItem.jsx","webpack://goit-react-hw-05-movies/./src/components/cast/cast.module.css?44e2","components/cast/cast.jsx"],"sourcesContent":["// const key = 'a7847a7111d49121298d04d56ec9460a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNzg0N2E3MTExZDQ5MTIxMjk4ZDA0ZDU2ZWM5NDYwYSIsInN1YiI6IjY0ZGM3OWQ0ZDEwMGI2MTRiNWY2YjlmZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.P2495hNu_tPV7ATn8vHZ3gQxpzZA5UQFueIAJcgSG4A',\n  },\n};\n\nexport async function getTrends() {\n  const result = await fetch(\n    // 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    'https://api.themoviedb.org/3/trending/all/week',\n    options\n  );\n  return result;\n}\n\nexport async function findMovie(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const movie = await result.json();\n  return movie;\n}\n\nexport async function getCast(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const cast = await result.json();\n  return cast;\n}\n\nexport async function getReviews(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const reviews = await result.json();\n  return reviews;\n}\n\nexport async function findMovieByName(query) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  const movie = await result.json();\n  return movie;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"castItem_card__Keaaq\",\"photo\":\"castItem_photo__oEW9i\",\"text\":\"castItem_text__fdQBU\"};","import css from './castItem.module.css';\n\nexport const CastItem = ({ el }) => {\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png';\n\n  return (\n    <li className={css.card}>\n      <h3>{el.name}</h3>\n      <img\n        src={\n          el.profile_path\n            ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n            : defaultImg\n        }\n        alt=\"actor\"\n        width=\"250\"\n        className={css.photo}\n      />\n      <p className={css.text}>Character: {el.character}</p>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__6F4cJ\"};","import { CastItem } from 'components/castItem/castItem';\nimport { useParams } from 'react-router-dom';\nimport css from './cast.module.css';\n\nconst { getCast } = require('components/api');\nconst { useEffect, useState } = require('react');\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    getCast(id).then(res => {\n      setCast(res);\n      //   console.log(res);\n    });\n    //   `https://image.tmdb.org/t/p/w500/${currentMovie.poster_path}`;\n  }, [id]);\n  return (\n    <div>\n      <ul className={css.list}>\n        {cast &&\n          cast.cast.map(el => {\n            return (\n              <CastItem key={el.id} el={el} />\n              //   <li key={el.id}>\n              //     <h3>{el.name}</h3>\n              //     <img\n              //       src={\n              //         el.profile_path\n              //           ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n              //           : defaultImg\n              //       }\n              //       alt=\"actor\"\n              //       width=\"250\"\n              //     />\n              //     <p>Character: {el.character}</p>\n              //   </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["options","method","headers","accept","Authorization","getTrends","fetch","result","findMovie","movieId","json","movie","getCast","cast","getReviews","reviews","findMovieByName","query","CastItem","el","className","css","name","src","profile_path","alt","width","character","require","useEffect","useState","id","useParams","setCast","then","res","map"],"sourceRoot":""}