{"version":3,"file":"static/js/462.30c6a640.chunk.js","mappings":"qVAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBC,MAEnB,iDACAN,GAJG,cACCO,EADD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACgBH,MAAM,sCAAD,OACcG,EADd,mBAExBT,GAHG,cACCO,EADD,gBAKeA,EAAOG,OALtB,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,yFACgBH,MAAM,sCAAD,OACcG,EADd,2BAExBT,GAHG,cACCO,EADD,gBAKcA,EAAOG,OALrB,cAKCG,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,yFACgBH,MAAM,sCAAD,OACcG,EADd,kCAExBT,GAHG,cACCO,EADD,gBAKiBA,EAAOG,OALxB,cAKCK,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACgBX,MAAM,mDAAD,OAC2BW,EAD3B,8CAExBjB,GAHG,cACCO,EADD,gBAKeA,EAAOG,OALtB,cAKCC,EALD,yBAMEA,GANF,kE,2EC9CP,EAAuB,qBAAvB,EAAiD,mBAAjD,EAAyE,mB,SCE5DO,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAb,GACV,OAAIA,EAAMc,OAEN,eAAIH,UAAWC,EAAf,UACE,SAAC,EAAAG,KAAD,CACEC,GAAE,kBAAahB,EAAMiB,IACrBN,UAAWC,EACXM,MAAO,CAAEC,KAAMV,GAHjB,SAKGT,EAAMc,SANiBd,EAAMiB,KAapC,eAAIN,UAAWC,EAAf,UACE,SAAC,EAAAG,KAAD,CACEC,GAAE,kBAAahB,EAAMiB,IACrBN,UAAWC,EACXM,MAAO,CAAEC,KAAMV,GAHjB,SAKGT,EAAMoB,QANiBpB,EAAMiB,GAYrC,KAGN,C,0GCvCD,EAAwB,sBAAxB,EAAsD,sB,SCItD,EAAgCI,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAsCnB,EApCc,WAAO,IAAD,EAClB,EAA4BA,EAAS,IAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAA4BC,EAAAA,EAAAA,mBAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAU,UAAGF,EAAOG,IAAI,eAAd,QAAyB,GACzCP,GAAU,YAERjB,EAAAA,EAAAA,iBAAgBuB,GAAYE,MAAK,SAAAC,GAEL,IAAtBA,EAAIC,cAIRR,EAAUO,EAAIE,SAHZT,EAAU,GAIb,GACF,GAAE,CAACI,IAQJ,OACE,4BACE,eAAIjB,UAAWC,EAAf,yBACA,kBACEsB,KAAK,OACLvB,UAAWC,EACXuB,MAAOP,EACPQ,SAbe,SAAAC,GACnB,IAAMjB,EAAOiB,EAAEC,OAAOH,MAEtBR,EAD4B,KAATP,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAG9C,IAUIxB,IAAU,SAAC,IAAD,CAAQY,OAAQZ,MAGhC,C","sources":["components/api.jsx","webpack://goit-react-hw-05-movies/./src/components/trends/trends.module.css?a02a","components/trends/trends.jsx","webpack://goit-react-hw-05-movies/./src/pages/movies.module.css?33b8","pages/movies.jsx"],"sourcesContent":["// const key = 'a7847a7111d49121298d04d56ec9460a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNzg0N2E3MTExZDQ5MTIxMjk4ZDA0ZDU2ZWM5NDYwYSIsInN1YiI6IjY0ZGM3OWQ0ZDEwMGI2MTRiNWY2YjlmZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.P2495hNu_tPV7ATn8vHZ3gQxpzZA5UQFueIAJcgSG4A',\n  },\n};\n\nexport async function getTrends() {\n  const result = await fetch(\n    // 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    'https://api.themoviedb.org/3/trending/all/week',\n    options\n  );\n  return result;\n}\n\nexport async function findMovie(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const movie = await result.json();\n  return movie;\n}\n\nexport async function getCast(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const cast = await result.json();\n  return cast;\n}\n\nexport async function getReviews(movieId) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const reviews = await result.json();\n  return reviews;\n}\n\nexport async function findMovieByName(query) {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  const movie = await result.json();\n  return movie;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"trends_link__9QnwC\",\"li\":\"trends_li__gbsB2\",\"ul\":\"trends_ul__L7HRh\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './trends.module.css';\n\nexport const Trends = ({ trends }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <ul className={css.ul}>\n      {trends.map(movie => {\n        if (movie.title) {\n          return (\n            <li className={css.li} key={movie.id}>\n              <Link\n                to={`/movies/${movie.id}`}\n                className={css.link}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          );\n        }\n        // if (movie.name) {\n        return (\n          <li className={css.li} key={movie.id}>\n            <Link\n              to={`/movies/${movie.id}`}\n              className={css.link}\n              state={{ from: location }}\n            >\n              {movie.name}\n            </Link>\n          </li>\n        );\n        // }\n        // return;\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"movies_input__1T0o0\",\"title\":\"movies_title__ZsnnO\"};","import { findMovieByName } from 'components/api';\nimport { Trends } from 'components/trends/trends';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './movies.module.css';\n\nconst { useEffect, useState } = require('react');\n\nconst Movie = () => {\n  const [result, setResult] = useState('');\n  const [params, setParams] = useSearchParams();\n  const inputValue = params.get('name') ?? '';\n  useEffect(() => {\n    // console.log(inputValue);\n    findMovieByName(inputValue).then(res => {\n      //   console.log(res);\n      if (res.total_results === 0) {\n        setResult('');\n        return;\n      }\n      setResult(res.results);\n    });\n  }, [inputValue]);\n\n  const handleChange = e => {\n    const name = e.target.value;\n    const nextParams = name !== '' ? { name } : {};\n    setParams(nextParams);\n    // console.log(e.target.value);\n  };\n  return (\n    <div>\n      <h1 className={css.title}>Find movie</h1>\n      <input\n        type=\"text\"\n        className={css.input}\n        value={inputValue}\n        onChange={handleChange}\n      ></input>\n      {result && <Trends trends={result} />}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"names":["options","method","headers","accept","Authorization","getTrends","fetch","result","findMovie","movieId","json","movie","getCast","cast","getReviews","reviews","findMovieByName","query","Trends","trends","location","useLocation","className","css","map","title","Link","to","id","state","from","name","require","useEffect","useState","setResult","useSearchParams","params","setParams","inputValue","get","then","res","total_results","results","type","value","onChange","e","target"],"sourceRoot":""}